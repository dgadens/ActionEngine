//******************************
// VS PositionNormalTextured
// Creator: Daniel Gadens
// Date: 21/05/2012
//******************************

#define MAX_BONE_MATRICES 255

cbuffer cbPerFrame : register(b0) 
{
    float3 xCameraPosition             	: packoffset(c0);
    float3 xLightPosition               : packoffset(c1);
    float3 xLightDirection              : packoffset(c2);
    float3 xLightColor		        : packoffset(c3);
    float  xLightRange		        : packoffset(c3.w);
    float  xLightFalloff		: packoffset(c4.x);	    
    float  xTime                        : packoffset(c4.y);
};

cbuffer cbPerModel : register(b1) 
{
    float4x4 xWorld                     : packoffset(c0); 
    float4x4 xBones[MAX_BONE_MATRICES]  : packoffset(c4); 
};

cbuffer cbPerPass  : register(b2) 
{
    float4x4 xViewProjection      : packoffset(c0);
};

struct VS_INPUT
{
    float4 Position     : POSITION;
    float3 Normal       : NORMAL;
    float2 TexCoord     : TEXCOORD0;
    float3 BlendWeights : BLENDWEIGHTS;
    float3 BlendIndices : BLENDINDICES;
};

struct PS_INPUT
{
    float4 Position  : SV_POSITION;
    float3 Normal    : TEXCOORD0;
    float2 TexCoord  : TEXCOORD1;
    float3 PosWorld  : TEXCOORD2;
};


PS_INPUT main( VS_INPUT input )
{
    PS_INPUT output = (PS_INPUT)0;

    // Blend between the weighted bone matrices.
    float4x4 skinTransform = 0;

    skinTransform += xBones[input.BlendIndices.x] * input.BlendWeights.x;
    skinTransform += xBones[input.BlendIndices.y] * input.BlendWeights.y;
    skinTransform += xBones[input.BlendIndices.z] * input.BlendWeights.z;
    skinTransform += xBones[input.BlendIndices.w] * input.BlendWeights.w;
    output.Position = mul( input.Position, skinTransform );

    float4x4 worldViewProjection = mul ( xWorld, xViewProjection );
    output.Position = mul( output.Position, worldViewProjection );

    output.PosWorld = mul(input.Position, skinTransform);
    output.Normal = mul(input.Normal, xWorld * skinTransform);
    output.TexCoord = input.TexCoord;

    return output;
}